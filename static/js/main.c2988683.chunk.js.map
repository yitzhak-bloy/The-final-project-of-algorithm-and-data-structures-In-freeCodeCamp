{"version":3,"sources":["HomePage.jsx","Components/inputBox/InputBox.jsx","Components/button/button.jsx","Components/PalindromeChecker/PalindromeChecker.jsx","Components/RomanNumeralConverter/RomanNumeralConverter.jsx","Components/CaesarsCipher/CaesarsCipher.jsx","Components/TelephoneNumberValidator/TelephoneNumberValidator.jsx","Components/CurrencyAvailable/CurrencyAvailable.jsx","Components/calculation/calculation.jsx","Components/CashRegister/cashRegister.jsx","App.js","index.js"],"names":["HomePage","className","href","rel","target","to","InputBox","handleChange","sentenceWithinTheInputFrame","isCaesarsCipher","isRomanNumeralConverter","isTelephoneNumberValidator","type","name","min","max","onChange","placeholder","Button","handleClick","WordWrittenInAButton","value","onClick","PalindromeChecker","useState","sentence","setSentence","isItPalindrome","setIsItPalindrome","CaesarsCipher","search","alphanumeric","match","join","toLowerCase","alphanumericInReverse","split","reverse","RomanNumeralConverter","number","setNumber","thousandsRomanNumeral","setThousandsRomanNumeral","hundredsRomanNumeral","setHundredsRomanNumeral","dozensRomanNumeral","setDozensRomanNumeral","singleRomanNumeral","setSingleRomanNumeral","numbers","Thousands","Math","floor","Hundreds","Dozens","Single","length","Component","result","setresult","SentenceToConver","i","toUpperCase","push","TelephoneNumberValidator","phoneNumber","setPhoneNumber","test","CurrencyAvailable","handlePenny","handleNickel","handleDime","handleQuarter","handleOne","handleFive","handleTen","handleTwenty","handleOneHundred","step","solution","CurrencyValue","CoinName","State","Calculation","excess","cid","calculation","Excess","CurrentCurrency","Name","cidNamber","unshift","toFixed","filterSolution","filter","item","filterSolutionLengthe","console","log","CashRegister","setCalculation","price","setPrice","cash","setCash","setSolution","penny","setPenny","nickel","setNickel","dime","setDime","quarter","setQuarter","one","setOne","five","setFive","ten","setTen","twenty","setTwenty","oneHundred","setOneHundred","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2988683.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className='HomePage' >\r\n      <h1>Home Page</h1>\r\n      <p>For more information about the site, see <a href=\"https://github.com/yitzhak-bloy/freeCodeCamp-JavaScript-Algorithms\" rel=\"noopener noreferrer\" target=\"_blank\" >here</a>.</p>\r\n      <div className='Links'>\r\n        <Link to='/PalindromeChecker' className='link linkHome' >Palindrome Checker</Link>\r\n        <Link to='/CaesarsCipher' className='link linkHome' >Caesars Cipher</Link>\r\n        <Link to='/cashRegister' className='link linkHome' >Cash Register</Link>\r\n        <Link to='/RomanNumeralConverter' className='link linkHome' >Roman Numeral Converter</Link>\r\n        <Link to='/TelephoneNumberValidator' className='link linkHome' >Telephone Number Validator</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './inputBox.css';\r\n\r\nfunction InputBox({ handleChange,sentenceWithinTheInputFrame, isCaesarsCipher, isRomanNumeralConverter, isTelephoneNumberValidator }) {\r\n  if (isRomanNumeralConverter) {\r\n    return  <input \r\n              type=\"number\" \r\n              name=\"quantity\" \r\n              min=\"1\" \r\n              max=\"9999\"           \r\n              onChange={handleChange}\r\n              className='inputRomanNumeralConverter'\r\n            />      \r\n  } else if (isTelephoneNumberValidator) {\r\n    return  <input \r\n              type=\"number\" \r\n              name=\"quantity\"     \r\n              onChange={handleChange}\r\n              className='inputTelephoneNumberValidator'\r\n            />\r\n  } else {\r\n    return  <textarea \r\n              className={`${isCaesarsCipher ? 'caesarsCipher' : ''} text`} \r\n              name=\"textarea\" \r\n              placeholder={sentenceWithinTheInputFrame} \r\n              onChange={handleChange} \r\n            />\r\n  }\r\n}\r\n\r\nexport default InputBox;","import React from 'react';\r\nimport './button.css';\r\n\r\nfunction Button({ handleClick, WordWrittenInAButton }) {\r\n  return (\r\n    <div>\r\n        <input className=\"submit\" type=\"submit\" value={WordWrittenInAButton} onClick={handleClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InputBox from '../inputBox/InputBox'\r\nimport Button from '../button/button'\r\nimport './PalindromeChecker.css';\r\n\r\nconst PalindromeChecker = () => {\r\n  const [sentence, setSentence] = useState('');\r\n  const [isItPalindrome, setIsItPalindrome] = useState('');\r\n\r\n  const handleChange = (sentence) => {\r\n    setSentence(sentence.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (sentence.search(/[A-Za-z0-9]/g) >= 0) {\r\n      const alphanumeric = (sentence.match(/[A-Za-z0-9]/g).join('').toLowerCase());\r\n      const alphanumericInReverse = (alphanumeric.split('').reverse().join(''))\r\n      setIsItPalindrome(alphanumeric === alphanumericInReverse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"PalindromeChecker\">\r\n      <Link to='/' className='link1 link ' >HomePage</Link>\r\n      <h1>Palindrome Checker</h1>\r\n      <p>Checks whether the given string is <a href=\"https://en.wikipedia.org/wiki/Palindrome\" rel=\"noopener noreferrer\" target=\"_blank\" >Palindrome</a> or not.</p>\r\n      <InputBox \r\n        handleChange={handleChange} \r\n        sentenceWithinTheInputFrame='Write a statement to check' \r\n        CaesarsCipher\r\n      />\r\n      <Button\r\n        handleClick={handleClick} \r\n        WordWrittenInAButton='check' \r\n      />\r\n      { \r\n        isItPalindrome === true\r\n        ? \r\n          <p className='pBig'>It's a palindrome!</p>\r\n        : \r\n          isItPalindrome === false\r\n          ?       \r\n            <p className='pBig'>Sorry, that's not a palindrome.</p>\r\n          : \r\n            <p>Enter some alpha-numeric characters</p>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PalindromeChecker;","import React, { useState } from 'react';\r\nimport InputBox from '../inputBox/InputBox';\r\nimport Button from '../button/button';\r\nimport { Link } from 'react-router-dom';\r\nimport './RomanNumeralConverter.css';\r\n\r\nconst RomanNumeralConverter = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [thousandsRomanNumeral, setThousandsRomanNumeral] = useState('');\r\n  const [hundredsRomanNumeral, setHundredsRomanNumeral] = useState('');\r\n  const [dozensRomanNumeral, setDozensRomanNumeral] = useState('');\r\n  const [singleRomanNumeral, setSingleRomanNumeral] = useState('');\r\n\r\n  const handleChange = (numbers) => {\r\n    setNumber(numbers.target.value)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const Thousands = Math.floor(number / 1000) * 1000;\r\n    const Hundreds = Math.floor((number-Thousands) / 100) * 100;\r\n    const Dozens = Math.floor((number-Thousands-Hundreds) / 10) * 10;\r\n    const Single = Math.floor((number-Thousands-Hundreds-Dozens) / 1);\r\n\r\n    switch (Thousands) {\r\n      case 1000:\r\n        setThousandsRomanNumeral('M');\r\n      break;\r\n      case 2000:\r\n        setThousandsRomanNumeral('MM');\r\n        break;\r\n      case 3000:\r\n        setThousandsRomanNumeral('MMM');\r\n        break;\r\n      case 4000:\r\n        setThousandsRomanNumeral('MMMM');\r\n        break;\r\n      case 5000:\r\n        setThousandsRomanNumeral('MMMMM');\r\n        break;\r\n      case 6000:\r\n        setThousandsRomanNumeral('MMMMMM');\r\n        break;\r\n      case 7000:\r\n        setThousandsRomanNumeral('MMMMMMM');\r\n        break;\r\n      case 8000:\r\n        setThousandsRomanNumeral('MMMMMMMM');\r\n        break;\r\n      case 9000:\r\n        setThousandsRomanNumeral('MMMMMMMMM');\r\n        break;\r\n      default:\r\n        setThousandsRomanNumeral('');\r\n    }\r\n\r\n    switch (Hundreds) {\r\n      case 100:\r\n        setHundredsRomanNumeral('C');\r\n        break;\r\n      case 200:\r\n        setHundredsRomanNumeral('CC');\r\n        break;\r\n      case 300:\r\n        setHundredsRomanNumeral('CCC');\r\n        break;\r\n      case 400:\r\n        setHundredsRomanNumeral('CD');\r\n        break;\r\n      case 500:\r\n        setHundredsRomanNumeral('D');\r\n        break;\r\n      case 600:\r\n        setHundredsRomanNumeral('DC');\r\n        break;\r\n      case 700:\r\n        setHundredsRomanNumeral('DCC');\r\n        break;\r\n      case 800:\r\n        setHundredsRomanNumeral('DCCC');\r\n        break;\r\n      case 900:\r\n        setHundredsRomanNumeral('CM');\r\n        break;\r\n      default:\r\n        setHundredsRomanNumeral('');\r\n    }\r\n\r\n    switch (Dozens) {\r\n      case 10:\r\n        setDozensRomanNumeral('X');\r\n        break;\r\n      case 20:\r\n        setDozensRomanNumeral('XX');\r\n        break;\r\n      case 30:\r\n        setDozensRomanNumeral('XXX');\r\n        break;\r\n      case 40:\r\n        setDozensRomanNumeral('XL');\r\n        break;\r\n      case 50:\r\n        setDozensRomanNumeral('L');\r\n        break;\r\n      case 60:\r\n        setDozensRomanNumeral('LX');\r\n        break;\r\n      case 70:\r\n        setDozensRomanNumeral('LXX');\r\n        break;\r\n      case 80:\r\n        setDozensRomanNumeral('LXXX');\r\n        break;\r\n      case 90:\r\n        setDozensRomanNumeral('XC');\r\n        break;\r\n      default:\r\n        setDozensRomanNumeral('');\r\n    }\r\n\r\n    switch (Single) {\r\n      case 1:\r\n        setSingleRomanNumeral('I');\r\n        break;\r\n      case 2:\r\n        setSingleRomanNumeral('II');\r\n        break;\r\n      case 3:\r\n        setSingleRomanNumeral('III');\r\n        break;\r\n      case 4:\r\n        setSingleRomanNumeral('IV');\r\n        break;\r\n      case 5:\r\n        setSingleRomanNumeral('V');\r\n        break;\r\n      case 6:\r\n        setSingleRomanNumeral('VI');\r\n        break;\r\n      case 7:\r\n        setSingleRomanNumeral('VII');\r\n        break;\r\n      case 8:\r\n        setSingleRomanNumeral('VIII');\r\n        break;\r\n      case 9:\r\n        setSingleRomanNumeral('IX');\r\n        break;\r\n      default:\r\n        setSingleRomanNumeral('');\r\n    }  \r\n  }\r\n\r\n  return (\r\n    <div className=\"RomanNumeralConverter\">\r\n      <div>\r\n        <Link to='/' className='link1 link' >HomePage </Link>\r\n      </div>\r\n      <h1>Roman Numeral Converter</h1>\r\n      <p>Converts the given number into a <a href=\"https://en.wikipedia.org/wiki/Roman_numerals\" rel=\"noopener noreferrer\" target=\"_blank\" >roman numeral </a></p>\r\n      <p>Note! The conversion only works until the number 9999 and no more.</p>\r\n      <InputBox \r\n        handleChange={handleChange} \r\n        sentenceWithinTheInputFrame='Write a number'  \r\n        isRomanNumeralConverter\r\n      />\r\n      <Button\r\n        handleClick={handleClick} \r\n        WordWrittenInAButton='conversion' \r\n      />\r\n      {\r\n        thousandsRomanNumeral.length + hundredsRomanNumeral.length + dozensRomanNumeral.length + singleRomanNumeral.length\r\n        ?\r\n          <div>\r\n            <p> The number in Roman is: </p>\r\n            <p className='pBig margin'>{thousandsRomanNumeral + hundredsRomanNumeral + dozensRomanNumeral + singleRomanNumeral}</p>\r\n          </div>\r\n        :\r\n          <p>Write down a number you want to convert to a Roman number</p>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RomanNumeralConverter;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InputBox from '../inputBox/InputBox';\r\nimport Button from '../button/button';\r\nimport './CaesarsCipher.css';\r\n\r\nconst CaesarsCipher = Component => {\r\n  const [sentence, setSentence] = useState('');\r\n  const [result, setresult] = useState('');\r\n\r\n  const handleChange = (sentence) => {\r\n    setSentence(sentence.target.value)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    let result = [];\r\n    let SentenceToConver = sentence;\r\n    for (let i = 0; i < SentenceToConver.length; i++) {\r\n      switch (SentenceToConver[i].toUpperCase()) {\r\n        case 'A':\r\n          result.push('N')\r\n        break;\r\n        case 'B':\r\n          result.push('O')\r\n        break;\r\n        case 'C':\r\n          result.push('P')\r\n        break;\r\n        case 'D':\r\n          result.push('Q')\r\n        break;\r\n        case 'E':\r\n          result.push('R')\r\n        break;\r\n        case 'F':\r\n          result.push('S')\r\n        break;\r\n        case 'G':\r\n          result.push('T')\r\n        break;\r\n        case 'H':\r\n          result.push('U')\r\n        break;\r\n        case 'I':\r\n          result.push('V')\r\n        break;\r\n        case 'J':\r\n          result.push('W')\r\n        break;\r\n        case 'K':\r\n          result.push('X')\r\n        break;\r\n        case 'L':\r\n          result.push('Y')\r\n        break;\r\n        case 'M':\r\n          result.push('Z')\r\n        break;\r\n        case 'N':\r\n          result.push('A')\r\n        break;\r\n        case 'O':\r\n          result.push('B')\r\n        break;\r\n        case 'P':\r\n          result.push('C')\r\n        break;\r\n        case 'Q':\r\n          result.push('D')\r\n        break;\r\n        case 'R':\r\n          result.push('E')\r\n        break;\r\n        case 'S':\r\n          result.push('F')\r\n        break;\r\n        case 'T':\r\n          result.push('G')\r\n        break;\r\n        case 'U':\r\n          result.push('H')\r\n        break;\r\n        case 'V':\r\n          result.push('I')\r\n        break;\r\n        case 'W':\r\n          result.push('J')\r\n        break;\r\n        case 'X':\r\n          result.push('K')\r\n        break;\r\n        case 'Y':\r\n          result.push('L')\r\n        break;\r\n        case 'Z':\r\n          result.push('M')\r\n        break;\r\n        default:\r\n          result.push(SentenceToConver[i])\r\n      }\r\n    }\r\n    result = result.join('')\r\n    setresult(result)\r\n  }\r\n\r\n  return (\r\n    <div className=\"CaesarsCipher\">\r\n    <Link to='/' className='link link1' >HomePage</Link>\r\n      <h1>Caesars Cipher</h1>\r\n      <div className='pTag'>\r\n        <p>takes a <a href=\"https://en.wikipedia.org/wiki/ROT13\" rel=\"noopener noreferrer\" target=\"_blank\" >ROT13</a> encoded string as input and returns a decoded string. For example, in the following joke, the punchline has been obscured by ROT13: 'Why did the chicken cross the road? Gb trg gb gur bgure fvqr!'</p>\r\n        <p>git it a try!</p>\r\n      </div>\r\n      <InputBox \r\n        handleChange={handleChange} \r\n        sentenceWithinTheInputFrame='Write a sentence to convert'  \r\n        isCaesarsCipher\r\n      />\r\n      <Button\r\n        handleClick={handleClick} \r\n        WordWrittenInAButton='conversion' \r\n      />\r\n      <div>\r\n        {\r\n          result\r\n          ?\r\n            <div>\r\n              <p> The Caesars Cipher after conversion is: </p>\r\n              <p className='pBig margin'>'{result}'</p>\r\n            </div>\r\n          :\r\n            <p>Write a sentence in Caesars Cipher</p>\r\n        }\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CaesarsCipher;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InputBox from '../inputBox/InputBox';\r\nimport Button from '../button/button';\r\nimport './TelephoneNumberValidator.css';\r\n\r\nconst TelephoneNumberValidator = () => {\r\n\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [result, setresult] = useState('');\r\n\r\n\r\n  const handleChange = (phoneNumber) => {\r\n    setPhoneNumber(phoneNumber.target.value);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const regex = /^(1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s-]?\\d{3}[\\s-]?\\d{4}$/;\r\n    setresult(regex.test(phoneNumber));\r\n  }\r\n\r\n  return (\r\n    <div className=\"telephoneNumberValidator\">\r\n      <div>\r\n        <Link to='/' className='link link1' >HomePage</Link>\r\n      </div>\r\n      <h1>telephone Number Validator</h1>\r\n      <p className='spanOfTelephone'>Return true if the passed string looks like a valid US phone number</p>\r\n      <InputBox \r\n        handleChange={handleChange} \r\n        sentenceWithinTheInputFrame='Write a number to check'\r\n        isTelephoneNumberValidator\r\n      />\r\n      <Button\r\n        handleClick={handleClick} \r\n        WordWrittenInAButton='check' \r\n      />\r\n      {\r\n        result\r\n        ?\r\n          <div>\r\n            <p className='pBig'>This number is a real phone number!</p>\r\n          </div>\r\n        : \r\n          result === ''\r\n          ?       \r\n            <p>Enter a phone number for review</p>\r\n          : \r\n            <p className='pBig'>Sorry, this is not a real phone number. Try again.</p>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TelephoneNumberValidator;","import React from 'react';\r\nimport './CurrencyAvailable.css';\r\n\r\nfunction CurrencyAvailable({ handlePenny, handleNickel, handleDime, handleQuarter, handleOne, handleFive, handleTen, handleTwenty, handleOneHundred }) {\r\n  return (\r\n    <div className='CurrencyAvailable'>\r\n      <h3>The amount of coins currently in the cash register</h3>\r\n      <div className='coins'>\r\n        <div className='divOfcoins'>        \r\n          <span className='spanOfCoins'> Penny: </span>\r\n          <input className=\"number\" type=\"number\" step=\"0.01\" min=\"0\" placeholder={'Penny'} onChange={handlePenny} />\r\n        </div>\r\n        <div className='divOfcoins'>     \r\n          <span className='spanOfCoins'> Nickel: </span>   \r\n           <input className=\"number\" type=\"number\" step=\"0.05\" min=\"0\" placeholder={'Nickel'} onChange={handleNickel} />\r\n        </div>\r\n        <div className='divOfcoins'>\r\n          <span className='spanOfCoins'> Dime: </span>        \r\n           <input className=\"number\" type=\"number\" step=\"0.1\" min=\"0\" placeholder={'Dime'} onChange={handleDime} />\r\n        </div>\r\n        <div className='divOfcoins'>\r\n          <span className='spanOfCoins'> Quarter: </span>        \r\n          <input className=\"number\" type=\"number\" step=\"0.25\" min=\"0\" placeholder={'Quarter'} onChange={handleQuarter} />\r\n        </div>\r\n        <div className='divOfcoins'>\r\n          <span className='spanOfCoins'> Dollar: </span>        \r\n          <input className=\"number\" type=\"number\" step=\"1\" min=\"0\" placeholder={'Dollar'} onChange={handleOne} />\r\n        </div>\r\n        <div className='divOfcoins'>\r\n          <span className='spanOfCoins'> Five Dollars: </span>        \r\n          <input className=\"number\" type=\"number\" step=\"5\" min=\"0\" placeholder={'Five Dollars'} onChange={handleFive} />\r\n        </div>\r\n        <div className='divOfcoins'> \r\n          <span className='spanOfCoins'> Ten Dollars: </span>       \r\n          <input className=\"number\" type=\"number\" step=\"10\" min=\"0\" placeholder={'Ten Dollars'} onChange={handleTen} />\r\n        </div>\r\n        <div className='divOfcoins'> \r\n          <span className='spanOfCoins'> Twenty Dollars: </span>       \r\n          <input className=\"number\" type=\"number\" step=\"20\" min=\"0\" placeholder={'Twenty Dollars\t'} onChange={handleTwenty} />\r\n        </div>\r\n        <div className='divOfcoins'>    \r\n          <span className='spanOfCoins'> One-hundred Dollars: </span>    \r\n          <input className=\"number\" type=\"number\" step=\"100\" min=\"0\" placeholder={'One-hundred Dollars'} onChange={handleOneHundred} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyAvailable;","import React from 'react';\r\n\r\nlet solution = [];\r\nconst CurrencyValue = [0.01, 0.05, 0.1, 0.25, 1, 5, 10, 20, 100];\r\nconst CoinName = [' PENNY: ', ' NICKEL: ', ' DIME: ', ' QUARTER: ', ' ONE: ', ' FIVE: ', ' TEN: ', ' TWENTY: ', ' ONE HUNDRED: ']\r\nlet State = true;\r\n\r\nconst calculation = (Excess ,CurrentCurrency, Name, cidNamber, cid) => {\r\n// בודק כמה מהמטבע אפשר להכניס לעודף והאם יש כזאת כמות של מטבע בקופה\r\n\r\n// במקרה שאין את כל הכמות שנכנסת למטבע מכניסים את כל המטבע שנמצא בקופה\r\n  if ((CurrencyValue[CurrentCurrency] * Math.floor(Excess / CurrencyValue[CurrentCurrency])) > cid[cidNamber][1]) {\r\n    solution.unshift([CoinName[Name], cid[cidNamber][1]],)\r\n    Excess -= (cid[cidNamber][1])\r\n    Excess = Excess.toFixed(2)\r\n//  במקרה שיש את כל כמות המטבע שאפשר להכניס לעודף מכניסים את הכמות הזאת\r\n  } else {\r\n    solution.unshift([CoinName[Name], CurrencyValue[CurrentCurrency] * Math.floor(Excess / CurrencyValue[CurrentCurrency])])\r\n    Excess -= (CurrencyValue[CurrentCurrency] * Math.floor(Excess / CurrencyValue[CurrentCurrency]))\r\n    Excess = Excess.toFixed(2)\r\n  }\r\n// בודק האם לאחר שהכנסנו את כמות המטבע הנ\"ל עדיין נשאר עודף שצריך לשלמו בשאר מטבעות\r\n  if (Excess > 0) {\r\n// בודק האם נשארו עוד מטבעות לבצע אליהם את האלגוריתם\r\n\r\n// אם נשארו עוד מטבעות\r\n    if (CurrentCurrency > 0) {\r\n      CurrentCurrency--\r\n      Name--\r\n      cidNamber--\r\n      calculation(Excess, CurrentCurrency, Name, cidNamber, cid)\r\n// אם כבר עברנו על כל המטבעות \r\n    } else {\r\n        State = false;\r\n    }\r\n  } else {\r\n    State = true;\r\n  }\r\n}\r\n\r\nfunction Calculation({ excess, cid }) {\r\n  solution = [];\r\n  calculation(excess, 8, 8, 8, cid)\r\n  let filterSolution = (solution.filter((item) => item[1] > 0)).reverse();\r\n  let filterSolutionLengthe = filterSolution.length > 0;\r\n  console.log(filterSolutionLengthe)\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        State === false \r\n        ?  \r\n          <p className='pBig margin'>insufficient!</p> \r\n        : \r\n          filterSolutionLengthe \r\n          ?\r\n            <div>\r\n            <p className='h2Calculation'>The excess required to pay the customer is:</p>           \r\n            <p className='pBig margin'>{ filterSolution }</p>\r\n            </div>\r\n          :\r\n            null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculation;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InputBox from '../inputBox/InputBox'\r\nimport Button from '../button/button';\r\nimport CurrencyAvailable from '../CurrencyAvailable/CurrencyAvailable'\r\nimport Calculation from '../calculation/calculation'\r\nimport './cashRegister.css';\r\n\r\nconst CashRegister = () => {\r\n  const [ calculation, setCalculation ] = useState(false);\r\n  const [ price, setPrice ] = useState('');\r\n  const [ cash, setCash ] = useState('');\r\n  const [ solution, setSolution ] = useState([]);\r\n  const [ penny, setPenny ] = useState(0);\r\n  const [ nickel, setNickel ] = useState(0);\r\n  const [ dime, setDime ] = useState(0);\r\n  const [ quarter, setQuarter ] = useState(0);\r\n  const [ one, setOne ] = useState(0);\r\n  const [ five, setFive ] = useState(0);\r\n  const [ ten, setTen ] = useState(0);\r\n  const [ twenty, setTwenty ] = useState(0);\r\n  const [ oneHundred, setOneHundred ] = useState(0);\r\n\r\n  const handlePrice = (sentence) => {\r\n    setPrice(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handlePayment = (sentence) => {\r\n    setCash(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handlePenny = (sentence) => {\r\n    setPenny(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleNickel = (sentence) => {\r\n    setNickel(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleDime = (sentence) => {\r\n    setDime(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleQuarter = (sentence) => {\r\n    setQuarter(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleOne = (sentence) => {\r\n    setOne(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleFive = (sentence) => {\r\n    setFive(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleTen = (sentence) => {\r\n    setTen(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleTwenty = (sentence) => {\r\n    setTwenty(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleOneHundred = (sentence) => {\r\n    setOneHundred(sentence.target.value);\r\n    setCalculation(false);\r\n    setSolution([]);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setCalculation(true);\r\n  }\r\n\r\n  const cid = [['PENNY', penny], ['NICKEL', nickel], ['DIME', dime], ['QUARTER', quarter], ['ONE', one], ['FIVE', five], ['TEN', ten], ['TWENTY', twenty], ['ONE HUNDRED', oneHundred]]\r\n  const excess = (cash - price).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"cashRegister\">\r\n      <div>\r\n        <Link to='/' className='link link1' >HomePage</Link>\r\n      </div>\r\n      <h1>Cash Register</h1>\r\n      <p className='pTag p'>This is the cash register's calculations, you need to enter the product price and the amount received from the customer and the amounts currently in the cash register, and the site will calculate for you the surplus that comes to the customer. All amounts and calculations are done in US currency.</p>\r\n      <div className='inputAmounts'>\r\n        <div>\r\n          <h3>product price</h3>\r\n          <InputBox \r\n            handleChange={handlePrice} \r\n            sentenceWithinTheInputFrame='Write the product price' \r\n            isTelephoneNumberValidator \r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>The amount received from the customer</h3>\r\n          <InputBox \r\n            handleChange={handlePayment} \r\n            sentenceWithinTheInputFrame='Write down the amount the customer brought'  \r\n            isTelephoneNumberValidator\r\n          />\r\n        </div>\r\n      </div>\r\n      <CurrencyAvailable \r\n        handlePenny={handlePenny}\r\n        handleNickel={handleNickel}\r\n        handleDime={handleDime}\r\n        handleQuarter={handleQuarter}\r\n        handleOne={handleOne}\r\n        handleFive={handleFive}\r\n        handleTen={handleTen}\r\n        handleTwenty={handleTwenty}\r\n        handleOneHundred={handleOneHundred}\r\n      />\r\n      <div className='buttonOfCashRegister'>\r\n        <Button\r\n          handleClick={handleClick} \r\n          WordWrittenInAButton='Calculate the excess' \r\n        />\r\n      </div>\r\n      { calculation ? <Calculation  excess={excess} CurrentCurrency={8} cid={cid} Name={8} cidNamber={8} solution={solution} /> : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CashRegister;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport PalindromeChecker from './Components/PalindromeChecker/PalindromeChecker';\nimport RomanNumeralConverter from './Components/RomanNumeralConverter/RomanNumeralConverter'\nimport CaesarsCipher from './Components/CaesarsCipher/CaesarsCipher'\nimport TelephoneNumberValidator from './Components/TelephoneNumberValidator/TelephoneNumberValidator'\nimport CashRegister from './Components/CashRegister/cashRegister'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path='/' component={HomePage} />\n      <Route path='/PalindromeChecker' component={PalindromeChecker} />\n      <Route path='/RomanNumeralConverter' component={RomanNumeralConverter} />\n      <Route path='/CaesarsCipher' component={CaesarsCipher} />\n      <Route path='/TelephoneNumberValidator' component={TelephoneNumberValidator} />\n      <Route path='/cashRegister' component={CashRegister} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);"],"sourceRoot":""}